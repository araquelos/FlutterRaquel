#if TARGET_OS_SIMULATOR
#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
#ifndef VOXAUTH_SWIFT_H
#define VOXAUTH_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VoxAuth",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
enum AuthenticationMethodType : NSInteger;
enum OTPAlgorithm : NSInteger;
enum StatusType : NSInteger;

SWIFT_CLASS_NAMED("AuthenticationMethod")
@interface AuthenticationMethod : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) int64_t IDAuthenticationMethod;
@property (nonatomic) NSInteger IDAuthenticationMethodType;
@property (nonatomic, copy) NSString * _Nonnull NameAuthenticationMethodType;
@property (nonatomic, copy) NSString * _Nonnull Validity;
@property (nonatomic, copy) NSString * _Nonnull PassSize;
@property (nonatomic, copy) NSString * _Nonnull PassGenerationTime;
@property (nonatomic, copy) NSString * _Nonnull Cryptography;
@property (nonatomic, copy) NSString * _Nonnull DisplayNumber;
@property (nonatomic, copy) NSString * _Nonnull Key;
@property (nonatomic, copy) NSString * _Nonnull Status;
@property (nonatomic, copy) NSString * _Nonnull ProjectID;
@property (nonatomic) uint8_t Percentual;
@property (nonatomic) BOOL CanCreateNew;
@property (nonatomic, copy) NSString * _Nonnull IDMobileDevice;
- (enum AuthenticationMethodType)getAuthenticationMethodType SWIFT_WARN_UNUSED_RESULT;
- (enum OTPAlgorithm)getOTPAlgorithm SWIFT_WARN_UNUSED_RESULT;
- (enum StatusType)getStatusType SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, AuthenticationMethodType, open) {
  AuthenticationMethodTypeUNKNOWN_DEVICE = 0,
  AuthenticationMethodTypeMOBILE_TOKEN = 1,
  AuthenticationMethodTypeCHALLENGE_RESPONSE = 2,
  AuthenticationMethodTypeQRCODE = 3,
  AuthenticationMethodTypePUSH = 4,
  AuthenticationMethodTypePUSH_REVERSE = 5,
  AuthenticationMethodTypeSMS = 6,
  AuthenticationMethodTypeSMS_REVERSE = 7,
  AuthenticationMethodTypeEMAIL = 8,
  AuthenticationMethodTypeURA = 9,
  AuthenticationMethodTypeFACE_RECOGNITION = 10,
  AuthenticationMethodTypeFINGERPRINT = 11,
  AuthenticationMethodTypeSPEECH_RECOGNITION = 12,
};

typedef SWIFT_ENUM(NSInteger, CodReturnType, open) {
  CodReturnTypeUNKNOWN_COD_RETURN = 0,
  CodReturnTypeSUCCESS = 1,
  CodReturnTypeFAIL = 2,
  CodReturnTypeWAITING = 3,
  CodReturnTypeTIMEOUT = 4,
  CodReturnTypeBUSINESS_ERROR = 5,
  CodReturnTypeAPLICATION_ERROR = 6,
};


SWIFT_CLASS_NAMED("DeviceInfo")
@interface DeviceInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSString * _Nonnull Brand;
@property (nonatomic, copy) NSString * _Nonnull Board;
@property (nonatomic, copy) NSString * _Nonnull Device;
@property (nonatomic, copy) NSString * _Nonnull Software;
@property (nonatomic) BOOL SoftwareRooted;
@property (nonatomic, copy) NSString * _Nonnull SoftwareVersion;
@property (nonatomic, copy) NSString * _Nonnull Model;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull IMEI;
@property (nonatomic, copy) NSString * _Nonnull MAC;
@property (nonatomic, copy) NSString * _Nonnull SerialNumber;
@property (nonatomic, copy) NSString * _Nonnull Latitude;
@property (nonatomic, copy) NSString * _Nonnull Longitude;
@property (nonatomic, copy) NSString * _Nonnull RegistrationAppID;
@property (nonatomic, copy) NSString * _Nonnull UUID;
@property (nonatomic, copy) NSString * _Nonnull NicknameDevice;
- (void)setWithNickname:(NSString * _Nonnull)nickname;
@end



/// Exceções genéricas.
SWIFT_CLASS_NAMED("GenericException")
@interface GenericException : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedDescription;
/// Obter descrição do erro.
/// \code
/// genericExeption.getMessage()
///
/// \endcode
/// returns:
/// Descrição do erro.
- (NSString * _Nonnull)getMessage SWIFT_WARN_UNUSED_RESULT;
/// Ober código de erro.
/// \code
/// genericExeption.getErrorCode()
///
/// \endcode
/// returns:
/// Código de erro, verificar na class CodReturn
- (NSInteger)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GetDeviceInfoCallback, open) {
  GetDeviceInfoCallbackOnSuccess = 0,
  GetDeviceInfoCallbackOnFail = 1,
};


/// A <code>HashFunction</code> contains a <code>HashAlgorithm.Type</code>, which is then used for calculating the hash of a message.
SWIFT_CLASS_NAMED("HashFunction")
@interface HashFunction : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, OTPAlgorithm, open) {
  OTPAlgorithmHmacSHA1 = 0,
  OTPAlgorithmHmacSHA256 = 1,
  OTPAlgorithmHmacSHA512 = 2,
};


SWIFT_CLASS_NAMED("Return")
@interface Return : NSObject
@property (nonatomic) NSInteger CodReturn;
@property (nonatomic, copy) NSString * _Nonnull Data;
@property (nonatomic, copy) NSString * _Nonnull MessageReturn;
@property (nonatomic, copy) NSString * _Nonnull OperationDate;
@property (nonatomic, copy) NSString * _Nonnull BlockDate;
@property (nonatomic) NSInteger TimeOutResponse;
@property (nonatomic) BOOL AnotherAuthentication;
@property (nonatomic) BOOL SameAuthentication;
@property (nonatomic, copy) NSString * _Nonnull AuthenticationSignature;
- (enum CodReturnType)getReturnType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, StatusType, open) {
  StatusTypeUNKNOWN_STATUS = 0,
  StatusTypeDEVICE_LOCKED = 1,
  StatusTypeLOCKED_CUMULATIVE = 2,
  StatusTypeLOCKED_MAX_TRY = 3,
  StatusTypeCLIENT_LOCKED = 4,
  StatusTypeCLIENT_WITHOUT_ACTIVE_DEVICES = 5,
  StatusTypeCLIENT_WITHOUT_ACTIVE_UNLOCKED = 6,
  StatusTypeCLIENT_DISABLED = 7,
  StatusTypeMAX_LOCKED = 8,
  StatusTypeDEVICE_ACTIVATION_PENDING = 9,
  StatusTypeDEVICE_NOT_REGISTERED = 10,
  StatusTypeDEVICE_DISABLED = 11,
  StatusTypeUSE_CLOSED = 12,
  StatusTypeMAX_ACTIVE_DEVICES = 13,
  StatusTypeMAX_DEVICE_USE = 14,
  StatusTypeDEVICE_OUT_OF_VALIDITY = 15,
  StatusTypeCLIENT_NOT_FOUND = 16,
  StatusTypeMAX_DEVICE_IN_MOBILE = 17,
  StatusTypeDEVICE_MOBILE_NOT_REGISTERED = 18,
  StatusTypeDEVICE_MOBILE_DISABLED = 19,
  StatusTypeUSING_CLOSED_DEVICE = 20,
  StatusTypeDEVICE_AVAILABLE = 21,
  StatusTypeDEVICE_MOBILE_ACTIVATION_PENDING = 22,
};

@class NSDate;

SWIFT_CLASS_NAMED("Transaction")
@interface Transaction : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithClientName:(NSString * _Nonnull)ClientName ClientFirstName:(NSString * _Nonnull)ClientFirstName IP:(NSString * _Nonnull)IP MacAddress:(NSString * _Nonnull)MacAddress OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSString * _Nonnull Code;
@property (nonatomic, copy) NSDate * _Nonnull Date;
@property (nonatomic) double Value;
@property (nonatomic, copy) NSString * _Nonnull Info3;
@property (nonatomic, copy) NSString * _Nonnull Info4;
@property (nonatomic, copy) NSString * _Nonnull Info5;
@property (nonatomic, copy) NSString * _Nonnull Info6;
@property (nonatomic, copy) NSString * _Nonnull Info7;
@property (nonatomic, copy) NSString * _Nonnull Info8;
- (void)setWithClientName:(NSString * _Nonnull)text;
- (void)setWithClientFirstName:(NSString * _Nonnull)text;
- (void)setWithIP:(NSString * _Nonnull)text;
- (void)setWithMacAddress:(NSString * _Nonnull)text;
@end



@class NSData;
@class VOXAUTHSDKReturn;
@class VOXAUTHSDKReturnAuthenticationMethod;

SWIFT_CLASS_NAMED("VOXAUTHSDKClient")
@interface VOXAUTHSDKClient : NSObject
- (nonnull instancetype)initWithWebServiceUrl:(NSString * _Nonnull)webServiceUrl channelName:(NSString * _Nonnull)channelName password:(NSString * _Null_unspecified)password clientId:(NSString * _Null_unspecified)clientId nicknameDevice:(NSString * _Null_unspecified)nicknameDevice OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nullable)GetDeviceID:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Null_unspecified)getVersion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasNetworkConnection SWIFT_WARN_UNUSED_RESULT;
- (BOOL)available SWIFT_WARN_UNUSED_RESULT;
- (BOOL)syncDateAndReturnError:(NSError * _Nullable * _Nullable)error;
- (DeviceInfo * _Nullable)GetDeviceInfo:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (void)getDeviceInfoWithCallBackWithCallback:(SWIFT_NOESCAPE void (^ _Nonnull)(enum GetDeviceInfoCallback, DeviceInfo * _Nullable, GenericException * _Nullable))callback;
- (NSString * _Nonnull)getDeviceIP SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceMacAdress SWIFT_WARN_UNUSED_RESULT;
- (void)registerForRemoteNotificationsWithApnsToken:(NSData * _Null_unspecified)apnsToken;
- (VOXAUTHSDKReturn * _Nullable)verifyClientAccess:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AuthenticationMethod *> * _Nullable)getAuthenticationMethods:(Transaction * _Nonnull)transaction withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AuthenticationMethod *> * _Nullable)getAuthenticationMethodsMobile:(DeviceInfo * _Nonnull)info :(Transaction * _Nonnull)transaction withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AuthenticationMethod *> * _Nullable)syncAuthenticationMethodsConfigs:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AuthenticationMethod *> * _Nullable)getAuthenticationMethodsConfigs:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)insertMobileToken:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMobileToken:(enum OTPAlgorithm)algorithm :(NSString * _Nonnull)secret :(NSString * _Nonnull)size :(NSString * _Nonnull)interval withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)MTokenAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)mtoken withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)validateAuthentication:(NSString * _Nonnull)authSignature :(NSString * _Nonnull)passwordReceived withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)ResponseAuthentication:(NSString * _Nonnull)authSignature withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertQRCode:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)QrCodeAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)QrCodeConfirmation:(NSString * _Nonnull)code :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)EmailAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)email withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (VOXAUTHSDKReturnAuthenticationMethod * _Nullable)InsertPushAction:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)ReversePushAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)ReversePushRegisterAnswer:(int64_t)authenticationID :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)answer withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertPushPassword:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)PushAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertSpeechRecognition:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertFingerprintBiometry:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)FingerprintAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertFacialBiometry:(DeviceInfo * _Nonnull)info :(NSString * _Nonnull)image withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)SMSAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)telephone withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)ReverseSMSAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)telephone withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)URAAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)telephone withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface VOXAUTHSDKClient (SWIFT_EXTENSION(VoxAuth))
- (void)setWithHost:(NSString * _Nonnull)text;
- (void)setWithKey:(NSString * _Nonnull)text;
- (void)setWithClientId:(NSString * _Nonnull)text;
@end

enum VOXAUTHSDKReturnType : NSInteger;

SWIFT_CLASS_NAMED("VOXAUTHSDKReturn")
@interface VOXAUTHSDKReturn : NSObject
@property (nonatomic) enum VOXAUTHSDKReturnType status;
@property (nonatomic, copy) NSString * _Nonnull mensagem;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("VOXAUTHSDKReturnAuthenticationMethod")
@interface VOXAUTHSDKReturnAuthenticationMethod : VOXAUTHSDKReturn
@property (nonatomic, strong) AuthenticationMethod * _Nullable authenticationMethod;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem auth:(AuthenticationMethod * _Nullable)auth OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("VOXAUTHSDKReturnAuthenticationsMethod")
@interface VOXAUTHSDKReturnAuthenticationsMethod : VOXAUTHSDKReturn
@property (nonatomic, copy) NSArray<AuthenticationMethod *> * _Nullable authenticationsMethod;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem auths:(NSArray<AuthenticationMethod *> * _Nullable)auths OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("VOXAUTHSDKReturnService")
@interface VOXAUTHSDKReturnService : VOXAUTHSDKReturn
@property (nonatomic, strong) Return * _Nullable retorno;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem retorno:(Return * _Nullable)retorno OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("VOXAUTHSDKReturnToken")
@interface VOXAUTHSDKReturnToken : VOXAUTHSDKReturn
@property (nonatomic, copy) NSString * _Nullable token;
@property (nonatomic) float seconds;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem token:(NSString * _Nullable)token seconds:(float)seconds OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, VOXAUTHSDKReturnType, open) {
  VOXAUTHSDKReturnTypeSuccess = 1,
  VOXAUTHSDKReturnTypeNoInternetConnection = 2,
  VOXAUTHSDKReturnTypeFailure = 3,
  VOXAUTHSDKReturnTypeValidation = 4,
};

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
#else
#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
#ifndef VOXAUTH_SWIFT_H
#define VOXAUTH_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VoxAuth",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
enum AuthenticationMethodType : NSInteger;
enum OTPAlgorithm : NSInteger;
enum StatusType : NSInteger;

SWIFT_CLASS_NAMED("AuthenticationMethod")
@interface AuthenticationMethod : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) int64_t IDAuthenticationMethod;
@property (nonatomic) NSInteger IDAuthenticationMethodType;
@property (nonatomic, copy) NSString * _Nonnull NameAuthenticationMethodType;
@property (nonatomic, copy) NSString * _Nonnull Validity;
@property (nonatomic, copy) NSString * _Nonnull PassSize;
@property (nonatomic, copy) NSString * _Nonnull PassGenerationTime;
@property (nonatomic, copy) NSString * _Nonnull Cryptography;
@property (nonatomic, copy) NSString * _Nonnull DisplayNumber;
@property (nonatomic, copy) NSString * _Nonnull Key;
@property (nonatomic, copy) NSString * _Nonnull Status;
@property (nonatomic, copy) NSString * _Nonnull ProjectID;
@property (nonatomic) uint8_t Percentual;
@property (nonatomic) BOOL CanCreateNew;
@property (nonatomic, copy) NSString * _Nonnull IDMobileDevice;
- (enum AuthenticationMethodType)getAuthenticationMethodType SWIFT_WARN_UNUSED_RESULT;
- (enum OTPAlgorithm)getOTPAlgorithm SWIFT_WARN_UNUSED_RESULT;
- (enum StatusType)getStatusType SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, AuthenticationMethodType, open) {
  AuthenticationMethodTypeUNKNOWN_DEVICE = 0,
  AuthenticationMethodTypeMOBILE_TOKEN = 1,
  AuthenticationMethodTypeCHALLENGE_RESPONSE = 2,
  AuthenticationMethodTypeQRCODE = 3,
  AuthenticationMethodTypePUSH = 4,
  AuthenticationMethodTypePUSH_REVERSE = 5,
  AuthenticationMethodTypeSMS = 6,
  AuthenticationMethodTypeSMS_REVERSE = 7,
  AuthenticationMethodTypeEMAIL = 8,
  AuthenticationMethodTypeURA = 9,
  AuthenticationMethodTypeFACE_RECOGNITION = 10,
  AuthenticationMethodTypeFINGERPRINT = 11,
  AuthenticationMethodTypeSPEECH_RECOGNITION = 12,
};

typedef SWIFT_ENUM(NSInteger, CodReturnType, open) {
  CodReturnTypeUNKNOWN_COD_RETURN = 0,
  CodReturnTypeSUCCESS = 1,
  CodReturnTypeFAIL = 2,
  CodReturnTypeWAITING = 3,
  CodReturnTypeTIMEOUT = 4,
  CodReturnTypeBUSINESS_ERROR = 5,
  CodReturnTypeAPLICATION_ERROR = 6,
};


SWIFT_CLASS_NAMED("DeviceInfo")
@interface DeviceInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSString * _Nonnull Brand;
@property (nonatomic, copy) NSString * _Nonnull Board;
@property (nonatomic, copy) NSString * _Nonnull Device;
@property (nonatomic, copy) NSString * _Nonnull Software;
@property (nonatomic) BOOL SoftwareRooted;
@property (nonatomic, copy) NSString * _Nonnull SoftwareVersion;
@property (nonatomic, copy) NSString * _Nonnull Model;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull IMEI;
@property (nonatomic, copy) NSString * _Nonnull MAC;
@property (nonatomic, copy) NSString * _Nonnull SerialNumber;
@property (nonatomic, copy) NSString * _Nonnull Latitude;
@property (nonatomic, copy) NSString * _Nonnull Longitude;
@property (nonatomic, copy) NSString * _Nonnull RegistrationAppID;
@property (nonatomic, copy) NSString * _Nonnull UUID;
@property (nonatomic, copy) NSString * _Nonnull NicknameDevice;
- (void)setWithNickname:(NSString * _Nonnull)nickname;
@end



/// Exceções genéricas.
SWIFT_CLASS_NAMED("GenericException")
@interface GenericException : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedDescription;
/// Obter descrição do erro.
/// \code
/// genericExeption.getMessage()
///
/// \endcode
/// returns:
/// Descrição do erro.
- (NSString * _Nonnull)getMessage SWIFT_WARN_UNUSED_RESULT;
/// Ober código de erro.
/// \code
/// genericExeption.getErrorCode()
///
/// \endcode
/// returns:
/// Código de erro, verificar na class CodReturn
- (NSInteger)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GetDeviceInfoCallback, open) {
  GetDeviceInfoCallbackOnSuccess = 0,
  GetDeviceInfoCallbackOnFail = 1,
};


/// A <code>HashFunction</code> contains a <code>HashAlgorithm.Type</code>, which is then used for calculating the hash of a message.
SWIFT_CLASS_NAMED("HashFunction")
@interface HashFunction : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, OTPAlgorithm, open) {
  OTPAlgorithmHmacSHA1 = 0,
  OTPAlgorithmHmacSHA256 = 1,
  OTPAlgorithmHmacSHA512 = 2,
};


SWIFT_CLASS_NAMED("Return")
@interface Return : NSObject
@property (nonatomic) NSInteger CodReturn;
@property (nonatomic, copy) NSString * _Nonnull Data;
@property (nonatomic, copy) NSString * _Nonnull MessageReturn;
@property (nonatomic, copy) NSString * _Nonnull OperationDate;
@property (nonatomic, copy) NSString * _Nonnull BlockDate;
@property (nonatomic) NSInteger TimeOutResponse;
@property (nonatomic) BOOL AnotherAuthentication;
@property (nonatomic) BOOL SameAuthentication;
@property (nonatomic, copy) NSString * _Nonnull AuthenticationSignature;
- (enum CodReturnType)getReturnType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, StatusType, open) {
  StatusTypeUNKNOWN_STATUS = 0,
  StatusTypeDEVICE_LOCKED = 1,
  StatusTypeLOCKED_CUMULATIVE = 2,
  StatusTypeLOCKED_MAX_TRY = 3,
  StatusTypeCLIENT_LOCKED = 4,
  StatusTypeCLIENT_WITHOUT_ACTIVE_DEVICES = 5,
  StatusTypeCLIENT_WITHOUT_ACTIVE_UNLOCKED = 6,
  StatusTypeCLIENT_DISABLED = 7,
  StatusTypeMAX_LOCKED = 8,
  StatusTypeDEVICE_ACTIVATION_PENDING = 9,
  StatusTypeDEVICE_NOT_REGISTERED = 10,
  StatusTypeDEVICE_DISABLED = 11,
  StatusTypeUSE_CLOSED = 12,
  StatusTypeMAX_ACTIVE_DEVICES = 13,
  StatusTypeMAX_DEVICE_USE = 14,
  StatusTypeDEVICE_OUT_OF_VALIDITY = 15,
  StatusTypeCLIENT_NOT_FOUND = 16,
  StatusTypeMAX_DEVICE_IN_MOBILE = 17,
  StatusTypeDEVICE_MOBILE_NOT_REGISTERED = 18,
  StatusTypeDEVICE_MOBILE_DISABLED = 19,
  StatusTypeUSING_CLOSED_DEVICE = 20,
  StatusTypeDEVICE_AVAILABLE = 21,
  StatusTypeDEVICE_MOBILE_ACTIVATION_PENDING = 22,
};

@class NSDate;

SWIFT_CLASS_NAMED("Transaction")
@interface Transaction : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithClientName:(NSString * _Nonnull)ClientName ClientFirstName:(NSString * _Nonnull)ClientFirstName IP:(NSString * _Nonnull)IP MacAddress:(NSString * _Nonnull)MacAddress OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSString * _Nonnull Code;
@property (nonatomic, copy) NSDate * _Nonnull Date;
@property (nonatomic) double Value;
@property (nonatomic, copy) NSString * _Nonnull Info3;
@property (nonatomic, copy) NSString * _Nonnull Info4;
@property (nonatomic, copy) NSString * _Nonnull Info5;
@property (nonatomic, copy) NSString * _Nonnull Info6;
@property (nonatomic, copy) NSString * _Nonnull Info7;
@property (nonatomic, copy) NSString * _Nonnull Info8;
- (void)setWithClientName:(NSString * _Nonnull)text;
- (void)setWithClientFirstName:(NSString * _Nonnull)text;
- (void)setWithIP:(NSString * _Nonnull)text;
- (void)setWithMacAddress:(NSString * _Nonnull)text;
@end



@class NSData;
@class VOXAUTHSDKReturn;
@class VOXAUTHSDKReturnAuthenticationMethod;

SWIFT_CLASS_NAMED("VOXAUTHSDKClient")
@interface VOXAUTHSDKClient : NSObject
- (nonnull instancetype)initWithWebServiceUrl:(NSString * _Nonnull)webServiceUrl channelName:(NSString * _Nonnull)channelName password:(NSString * _Null_unspecified)password clientId:(NSString * _Null_unspecified)clientId nicknameDevice:(NSString * _Null_unspecified)nicknameDevice OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nullable)GetDeviceID:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Null_unspecified)getVersion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasNetworkConnection SWIFT_WARN_UNUSED_RESULT;
- (BOOL)available SWIFT_WARN_UNUSED_RESULT;
- (BOOL)syncDateAndReturnError:(NSError * _Nullable * _Nullable)error;
- (DeviceInfo * _Nullable)GetDeviceInfo:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (void)getDeviceInfoWithCallBackWithCallback:(SWIFT_NOESCAPE void (^ _Nonnull)(enum GetDeviceInfoCallback, DeviceInfo * _Nullable, GenericException * _Nullable))callback;
- (NSString * _Nonnull)getDeviceIP SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceMacAdress SWIFT_WARN_UNUSED_RESULT;
- (void)registerForRemoteNotificationsWithApnsToken:(NSData * _Null_unspecified)apnsToken;
- (VOXAUTHSDKReturn * _Nullable)verifyClientAccess:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AuthenticationMethod *> * _Nullable)getAuthenticationMethods:(Transaction * _Nonnull)transaction withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AuthenticationMethod *> * _Nullable)getAuthenticationMethodsMobile:(DeviceInfo * _Nonnull)info :(Transaction * _Nonnull)transaction withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AuthenticationMethod *> * _Nullable)syncAuthenticationMethodsConfigs:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AuthenticationMethod *> * _Nullable)getAuthenticationMethodsConfigs:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)insertMobileToken:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMobileToken:(enum OTPAlgorithm)algorithm :(NSString * _Nonnull)secret :(NSString * _Nonnull)size :(NSString * _Nonnull)interval withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)MTokenAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)mtoken withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)validateAuthentication:(NSString * _Nonnull)authSignature :(NSString * _Nonnull)passwordReceived withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)ResponseAuthentication:(NSString * _Nonnull)authSignature withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertQRCode:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)QrCodeAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)QrCodeConfirmation:(NSString * _Nonnull)code :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)EmailAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)email withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (VOXAUTHSDKReturnAuthenticationMethod * _Nullable)InsertPushAction:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)ReversePushAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)ReversePushRegisterAnswer:(int64_t)authenticationID :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)answer withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertPushPassword:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)PushAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertSpeechRecognition:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertFingerprintBiometry:(DeviceInfo * _Nonnull)info withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)FingerprintAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (AuthenticationMethod * _Nullable)InsertFacialBiometry:(DeviceInfo * _Nonnull)info :(NSString * _Nonnull)image withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)SMSAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)telephone withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)ReverseSMSAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)telephone withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Return * _Nullable)URAAuthentication:(Transaction * _Nonnull)transaction :(int64_t)idAuthenticationMethod :(NSString * _Nonnull)telephone withError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface VOXAUTHSDKClient (SWIFT_EXTENSION(VoxAuth))
- (void)setWithHost:(NSString * _Nonnull)text;
- (void)setWithKey:(NSString * _Nonnull)text;
- (void)setWithClientId:(NSString * _Nonnull)text;
@end

enum VOXAUTHSDKReturnType : NSInteger;

SWIFT_CLASS_NAMED("VOXAUTHSDKReturn")
@interface VOXAUTHSDKReturn : NSObject
@property (nonatomic) enum VOXAUTHSDKReturnType status;
@property (nonatomic, copy) NSString * _Nonnull mensagem;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("VOXAUTHSDKReturnAuthenticationMethod")
@interface VOXAUTHSDKReturnAuthenticationMethod : VOXAUTHSDKReturn
@property (nonatomic, strong) AuthenticationMethod * _Nullable authenticationMethod;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem auth:(AuthenticationMethod * _Nullable)auth OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("VOXAUTHSDKReturnAuthenticationsMethod")
@interface VOXAUTHSDKReturnAuthenticationsMethod : VOXAUTHSDKReturn
@property (nonatomic, copy) NSArray<AuthenticationMethod *> * _Nullable authenticationsMethod;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem auths:(NSArray<AuthenticationMethod *> * _Nullable)auths OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("VOXAUTHSDKReturnService")
@interface VOXAUTHSDKReturnService : VOXAUTHSDKReturn
@property (nonatomic, strong) Return * _Nullable retorno;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem retorno:(Return * _Nullable)retorno OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("VOXAUTHSDKReturnToken")
@interface VOXAUTHSDKReturnToken : VOXAUTHSDKReturn
@property (nonatomic, copy) NSString * _Nullable token;
@property (nonatomic) float seconds;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatus:(enum VOXAUTHSDKReturnType)status mensagem:(NSString * _Nonnull)mensagem token:(NSString * _Nullable)token seconds:(float)seconds OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, VOXAUTHSDKReturnType, open) {
  VOXAUTHSDKReturnTypeSuccess = 1,
  VOXAUTHSDKReturnTypeNoInternetConnection = 2,
  VOXAUTHSDKReturnTypeFailure = 3,
  VOXAUTHSDKReturnTypeValidation = 4,
};

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
#endif
